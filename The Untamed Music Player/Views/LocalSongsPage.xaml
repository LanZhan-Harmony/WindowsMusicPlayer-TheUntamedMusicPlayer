<Page x:Class="The_Untamed_Music_Player.Views.LocalSongsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:contract="using:The_Untamed_Music_Player.Contracts.Models"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:helper="using:The_Untamed_Music_Player.Helpers"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:The_Untamed_Music_Player.Models"
      xmlns:ui="using:CommunityToolkit.WinUI"
      xmlns:viewmodel="using:The_Untamed_Music_Player.ViewModels"
      Unloaded="LocalSongsPage_Unloaded"
      mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="SortByListViewItemTemplate" x:DataType="x:String">
            <ListViewItem Margin="0,2,0,2">
                <TextBlock Text="{x:Bind}"/>
            </ListViewItem>
        </DataTemplate>
        <DataTemplate x:Key="GenreListViewItemTemplate" x:DataType="x:String">
            <ListViewItem Margin="0,2,0,2">
                <TextBlock Text="{x:Bind}"/>
            </ListViewItem>
        </DataTemplate>
        <CollectionViewSource x:Name="GroupedSongList"
                              IsSourceGrouped="True"
                              Source="{x:Bind ViewModel.GroupedSongList, Mode=OneWay}"/>
        <DataTemplate x:Key="ZoomedInGroupHeaderTemplate" x:DataType="helper:GroupInfoList">
            <TextBlock AutomationProperties.AccessibilityView="Raw"
                       Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}"
                       Text="{x:Bind Key}"
                       TextTrimming="WordEllipsis"/>
        </DataTemplate>
        <DataTemplate x:Key="ZoomedOutTemplate" x:DataType="ICollectionViewGroup">
            <Grid Width="{x:Bind model:Data.LocalSongsViewModel.GetZoomedOutViewGridWidth(model:Data.LocalSongsViewModel.SortMode)}">
                <TextBlock Grid.Column="1"
                           Margin="{x:Bind model:Data.LocalSongsViewModel.GetZoomedOutViewTextBlockMargin(model:Data.LocalSongsViewModel.SortMode)}"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Center"
                           Style="{StaticResource SubtitleTextBlockStyle}"
                           Text="{x:Bind ((helper:GroupInfoList)Group).Key}"
                           TextAlignment="Center" TextTrimming="WordEllipsis"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SongListViewTemplate" x:DataType="model:BriefLocalSongInfo">
            <Grid Height="52"
                  Background="Transparent"
                  PointerEntered="Grid_PointerEntered"
                  PointerExited="Grid_PointerExited">
                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Songs_Play"
                                        Width="216"
                                        Click="PlayButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xE768;}"/>
                        <MenuFlyoutItem x:Uid="Songs_PlayNext"
                                        Click="PlayNextButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xF5EB;}"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutSubItem x:Uid="Songs_AddTo"
                                           Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                              Glyph=&#xE710;}"
                                           Loaded="AddToSubItem_Loaded">
                            <MenuFlyoutItem x:Uid="Songs_AddTo_PlayQueue"
                                            Width="216"
                                            Click="AddToPlayQueueButton_Click"
                                            Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                               Glyph=&#xE93F;}"/>
                            <MenuFlyoutSeparator/>
                            <MenuFlyoutItem x:Uid="Songs_AddTo_NewPlaylist"
                                            Click="AddToNewPlaylistButton_Click"
                                            Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                               Glyph=&#xE710;}"/>
                            <!--  播放列表菜单项将在代码后置中动态添加  -->
                        </MenuFlyoutSubItem>
                        <MenuFlyoutItem x:Uid="Songs_ShowAlbum"
                                        Click="ShowAlbumButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xE93C;}"/>
                        <MenuFlyoutItem x:Uid="Songs_ShowArtist"
                                        Click="ShowArtistButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xE77B;}"/>
                        <MenuFlyoutItem x:Uid="Songs_EditInfo"
                                        Click="EditInfoButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xE70F;}"/>
                        <MenuFlyoutItem x:Uid="Songs_Properties"
                                        Click="PropertiesButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xE946;}"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Uid="Songs_Select"
                                        Click="SelectButton_Click"
                                        Icon="{ui:FontIcon FontFamily={StaticResource UntamedFontFamily},
                                                           Glyph=&#xEA20;}"/>
                    </MenuFlyout>
                </Grid.ContextFlyout>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition Width="2.2*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="1.3*"/>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="ItemCheckBox"
                          Grid.Column="0"
                          IsThreeState="False" Visibility="Collapsed"/>
                <Button x:Name="PlayButton" x:Uid="Songs_PlayButton"
                        Grid.Column="1"
                        Click="PlayButton_Click"
                        Style="{StaticResource SmallPlayButtonStyle}"
                        Visibility="Collapsed">
                    <FontIcon FontFamily="{StaticResource UntamedFontFamily}"
                              FontSize="16"
                              Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}"
                              Glyph="&#xE768;"/>
                </Button>
                <TextBlock x:Name="TitleText"
                           Grid.Column="2"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="{x:Bind Title}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind Title}"/>
                <Button Grid.Column="3"
                        Background="Transparent" BorderBrush="Transparent"
                        Click="ShowArtistButton_Click">
                    <TextBlock x:Name="ArtistText"
                               FontSize="12"
                               Text="{x:Bind ArtistsStr}"
                               TextTrimming="CharacterEllipsis"
                               ToolTipService.ToolTip="{x:Bind ArtistsStr}"/>
                </Button>
                <Button Grid.Column="4"
                        Background="Transparent" BorderBrush="Transparent"
                        Click="ShowAlbumButton_Click">
                    <TextBlock x:Name="AlbumText"
                               FontSize="12"
                               Text="{x:Bind Album}"
                               TextTrimming="CharacterEllipsis"
                               ToolTipService.ToolTip="{x:Bind Album}"/>
                </Button>
                <TextBlock x:Name="YearText"
                           Grid.Column="5"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="{x:Bind YearStr}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind YearStr}"/>
                <TextBlock x:Name="GenreText"
                           Grid.Column="6"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="{x:Bind GenreStr}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind GenreStr}"/>
                <TextBlock x:Name="DurationText"
                           Grid.Column="7"
                           Margin="0,0,10,0" HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="{x:Bind DurationStr}"
                           TextTrimming="CharacterEllipsis"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuGrid.Margin" Value="16,23,16,0"/>
                        <Setter Target="SongListView.Padding" Value="12,0,12,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuGrid.Margin" Value="56,23,56,0"/>
                        <Setter Target="SongListView.Padding" Value="52,0,52,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="MenuGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    Click="{x:Bind ViewModel.ShuffledPlayAllButton_Click}"
                    Style="{StaticResource AccentButtonStyle}">
                <StackPanel Orientation="Horizontal" Spacing="4">
                    <FontIcon FontFamily="{StaticResource UntamedFontFamily}"
                              FontSize="12" Glyph="&#xE8B1;"/>
                    <TextBlock x:Uid="HaveMusic_Shuffle"/>
                </StackPanel>
            </Button>
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal" Spacing="16">
                <Button Background="Transparent" BorderBrush="Transparent">
                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <TextBlock x:Uid="Songs_SortByChosen"/>
                        <TextBlock Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.SortByStr, Mode=OneWay}"/>
                        <FontIcon Margin="8,0,0,0"
                                  FontFamily="{StaticResource UntamedFontFamily}"
                                  FontSize="12" Glyph="&#xE70D;"/>
                    </StackPanel>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <ListView x:Name="SortByListView"
                                      Margin="-12,-13,-12,-15"
                                      ItemTemplate="{StaticResource SortByListViewItemTemplate}"
                                      ItemsSource="{x:Bind ViewModel.SortBy}"
                                      Loaded="{x:Bind ViewModel.SortByListView_Loaded}"
                                      SelectionChanged="{x:Bind ViewModel.SortByListView_SelectionChanged}"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button Background="Transparent" BorderBrush="Transparent">
                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <TextBlock x:Uid="Songs_GenreChosen"/>
                        <TextBlock Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.GenreStr, Mode=OneWay}"/>
                        <FontIcon Margin="8,0,0,0"
                                  FontFamily="{StaticResource UntamedFontFamily}"
                                  FontSize="12" Glyph="&#xE70D;"/>
                    </StackPanel>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <ListView x:Name="GenreListView"
                                      Margin="-12,-13,-12,-15"
                                      ItemTemplate="{StaticResource GenreListViewItemTemplate}"
                                      ItemsSource="{x:Bind ViewModel.Genres, Mode=OneWay}"
                                      Loaded="{x:Bind ViewModel.GenreListView_Loaded}"
                                      SelectionChanged="{x:Bind ViewModel.GenreListView_SelectionChanged}"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>
        <ProgressRing Grid.Row="1"
                      Width="50" Height="50"
                      Margin="0,24,0,0"
                      Canvas.ZIndex="1"
                      IsActive="{x:Bind ViewModel.IsProgressRingActive, Mode=OneWay}"/>
        <SemanticZoom Grid.Row="1" Margin="0,26,0,0">
            <SemanticZoom.ZoomedInView>
                <ListView x:Name="SongListView"
                          helper:CurrentSongHighlightExtensions.NotPlayingBrush="{ThemeResource TextFillColorPrimaryBrush}"
                          helper:CurrentSongHighlightExtensions.PlayingBrush="{ThemeResource AccentTextFillColorTertiaryBrush}"
                          helper:ListViewExtensions.ItemCornerRadius="8"
                          helper:ListViewExtensions.ItemMargin="0,3,0,3"
                          CanDragItems="True" IsItemClickEnabled="True"
                          ItemClick="{x:Bind ViewModel.SongListView_ItemClick}"
                          ItemTemplate="{StaticResource SongListViewTemplate}"
                          ItemsSource="{x:Bind ViewModel.GetSongListViewSource(GroupedSongList.View, ViewModel.NotGroupedSongList), Mode=OneWay}"
                          Opacity="{x:Bind ViewModel.GetSongListViewOpacity(ViewModel.IsProgressRingActive), Mode=OneWay}"
                          SelectionMode="None">
                    <interactivity:Interaction.Behaviors>
                        <helper:AlternatingListViewBehavior AlternateBackground="{ThemeResource AlternateBackgroundBrush}"
                                                            AlternateBorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                            AlternateBorderThickness="1"/>
                    </interactivity:Interaction.Behaviors>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.GroupStyle>
                        <GroupStyle HeaderTemplate="{StaticResource ZoomedInGroupHeaderTemplate}"/>
                    </ListView.GroupStyle>
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <GridView HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsItemClickEnabled="True"
                          ItemTemplate="{StaticResource ZoomedOutTemplate}"
                          ItemsSource="{x:Bind GroupedSongList.View.CollectionGroups, Mode=OneWay}"
                          SelectionMode="None">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid MaximumRowsOrColumns="8" Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                </GridView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>
    </Grid>
</Page>
