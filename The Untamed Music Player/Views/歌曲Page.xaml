<?xml version="1.0" ?>
<Page x:Class="The_Untamed_Music_Player.Views.歌曲Page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:helper="using:The_Untamed_Music_Player.Helpers"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:The_Untamed_Music_Player.Models"
      xmlns:viewmodel="using:The_Untamed_Music_Player.ViewModels"
      mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="SortByListViewItemTemplate" x:DataType="x:String">
            <ListViewItem Margin="0,2,0,2">
                <TextBlock Text="{x:Bind}"/>
            </ListViewItem>
        </DataTemplate>
        <DataTemplate x:Key="GenreListViewItemTemplate" x:DataType="x:String">
            <ListViewItem Margin="0,2,0,2">
                <TextBlock Text="{x:Bind}"/>
            </ListViewItem>
        </DataTemplate>
        <CollectionViewSource x:Name="GroupedSongList"
                              IsSourceGrouped="True"
                              Source="{x:Bind ViewModel.GroupedSongList, Mode=OneWay}"/>
        <DataTemplate x:Key="SongListViewTemplate" x:DataType="model:BriefMusicInfo">
            <Grid Height="46"
                  Background="Transparent" PointerEntered="Grid_PointerEntered"
                  PointerExited="Grid_PointerExited">
                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="歌曲_Play">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE768;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Uid="歌曲_PlayNext">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xECC8;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutSubItem x:Uid="歌曲_AddTo">
                            <MenuFlyoutSubItem.Icon>
                                <FontIcon Glyph="&#xE710;"/>
                            </MenuFlyoutSubItem.Icon>
                            <MenuFlyoutItem x:Uid="歌曲_AddTo_PlayQueue">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE90B;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutSeparator/>
                            <MenuFlyoutItem x:Uid="歌曲_AddTo_NewPlaylist">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE710;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyoutSubItem>
                        <MenuFlyoutItem x:Uid="歌曲_EditInfo">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE70F;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Uid="歌曲_Properties">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE946;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Uid="歌曲_ShowAlbum">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE93C;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Uid="歌曲_ShowArtist">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE77B;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Uid="歌曲_Select">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE762;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Grid.ContextFlyout>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition Width="2.2*"/>
                    <ColumnDefinition Width="1.5*"/>
                    <ColumnDefinition Width="1.3*"/>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="ItemCheckBox"
                          Grid.Column="0"
                          IsThreeState="False" Visibility="Collapsed"/>
                <Button x:Name="PlayButton" x:Uid="歌曲_PlayButton"
                        Grid.Column="1"
                        Click="PlayButton_Click"
                        DataContext="{x:Bind}"
                        Style="{StaticResource SmallPlayButtonStyle}"
                        Visibility="Collapsed">
                    <FontIcon FontSize="16"
                              Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}"
                              Glyph="&#xE768;"/>
                </Button>
                <TextBlock Grid.Column="2"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                           Text="{x:Bind Title}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind Title}"/>
                <Button Grid.Column="3"
                        Background="Transparent" BorderBrush="Transparent">
                    <TextBlock FontSize="12"
                               Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                               Text="{x:Bind ArtistsStr}"
                               TextTrimming="CharacterEllipsis"
                               ToolTipService.ToolTip="{x:Bind ArtistsStr}"/>
                </Button>
                <Button Grid.Column="4"
                        Background="Transparent" BorderBrush="Transparent">
                    <TextBlock FontSize="12"
                               Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                               Text="{x:Bind Album}"
                               TextTrimming="CharacterEllipsis"
                               ToolTipService.ToolTip="{x:Bind Album}"/>
                </Button>
                <TextBlock Grid.Column="5"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontSize="12"
                           Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                           Text="{x:Bind YearStr}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind YearStr}"/>
                <TextBlock Grid.Column="6"
                           HorizontalAlignment="Left" VerticalAlignment="Center"
                           FontSize="12"
                           Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                           Text="{x:Bind GenreStr}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.ToolTip="{x:Bind GenreStr}"/>
                <TextBlock Grid.Column="7"
                           Margin="0,0,10,0" HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Foreground="{x:Bind GetTextForeground(model:Data.MusicPlayer.CurrentMusic, model:Data.SettingsViewModel.ElementTheme), Mode=OneWay}"
                           Text="{x:Bind DurationStr}"
                           TextTrimming="CharacterEllipsis"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuGrid.Margin" Value="16,-11,16,0"/>
                        <Setter Target="SongListView.Padding" Value="12,0,12,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuGrid.Margin" Value="{StaticResource NavigationViewPageContentMargin}"/>
                        <Setter Target="SongListView.Padding" Value="52,0,52,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="MenuGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    Click="{x:Bind model:Data.MusicPlayer.ShuffleModeUpdate}"
                    Style="{StaticResource AccentButtonStyle}">
                <StackPanel Orientation="Horizontal" Spacing="4">
                    <FontIcon FontSize="12" Glyph="&#xE8B1;"/>
                    <TextBlock x:Uid="有音乐_Shuffle"/>
                </StackPanel>
            </Button>
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal" Spacing="16">
                <Button Background="Transparent" BorderBrush="Transparent">
                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <TextBlock x:Uid="歌曲_SortByChosen"/>
                        <TextBlock Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.GetSortByStr(ViewModel.SortMode), Mode=OneWay}"/>
                        <FontIcon Margin="8,0,0,0"
                                  FontSize="12" Glyph="&#xE70D;"/>
                    </StackPanel>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <ListView x:Name="SortByListView"
                                      Margin="-12,-13,-12,-15"
                                      ItemTemplate="{StaticResource SortByListViewItemTemplate}"
                                      ItemsSource="{x:Bind ViewModel.SortBy}"
                                      Loaded="{x:Bind ViewModel.SortByListView_Loaded}"
                                      SelectionChanged="{x:Bind ViewModel.SortByListView_SelectionChanged}"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button Background="Transparent" BorderBrush="Transparent">
                    <StackPanel Orientation="Horizontal" Spacing="4">
                        <TextBlock x:Uid="歌曲_GenreChosen"/>
                        <TextBlock Foreground="{ThemeResource AccentTextFillColorTertiaryBrush}" Text="{x:Bind ViewModel.GetGenreStr(ViewModel.GenreMode), Mode=OneWay}"/>
                        <FontIcon Margin="8,0,0,0"
                                  FontSize="12" Glyph="&#xE70D;"/>
                    </StackPanel>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <ListView x:Name="GenreListView"
                                      Margin="-12,-13,-12,-15"
                                      ItemTemplate="{StaticResource GenreListViewItemTemplate}"
                                      ItemsSource="{x:Bind ViewModel.Genres, Mode=OneWay}"
                                      Loaded="{x:Bind ViewModel.GenreListView_Loaded}"
                                      SelectionChanged="{x:Bind ViewModel.GenreListView_SelectionChanged}"/>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>
        <ListView x:Name="SongListView"
                  Grid.Row="2"
                  Margin="0,24,0,0"
                  CanDragItems="True" IsItemClickEnabled="True"
                  ItemClick="{x:Bind ViewModel.SongListView_ItemClick}"
                  ItemTemplate="{StaticResource SongListViewTemplate}"
                  ItemsSource="{x:Bind ViewModel.GetSongListViewSource(GroupedSongList.View, ViewModel.NotGroupedSongList), Mode=OneWay}"
                  SelectionMode="None">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate x:DataType="helper:GroupInfoList">
                            <Border AutomationProperties.AccessibilityView="Raw">
                                <TextBlock AutomationProperties.AccessibilityView="Raw"
                                           Foreground="{StaticResource AccentTextFillColorTertiaryBrush}"
                                           Text="{x:Bind Key}"/>
                            </Border>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
            <interactivity:Interaction.Behaviors>
                <helper:AlternatingListViewBehavior AlternateBackground="#FDFEFE" DarkThemeBackground="#303539"/>
            </interactivity:Interaction.Behaviors>
        </ListView>
    </Grid>
</Page>
